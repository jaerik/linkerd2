ARG ARCH=amd64
ARG RUNTIME_IMAGE=$ARCH/debian:buster-20200514-slim
ARG GO_DEPS_IMAGE=gcr.io/linkerd-io/go-deps
ARG GO_DEPS_VERSION=30d997a8
ARG RUST_IMAGE_VERSION=1.41.1-slim-buster

FROM $GO_DEPS_IMAGE:$GO_DEPS_VERSION as golang-amd64
ENV GOARCH=amd64

FROM $GO_DEPS_IMAGE:$GO_DEPS_VERSION as golang-arm32v7
ENV GOARCH=arm
ENV GOARM=7

FROM $GO_DEPS_IMAGE:$GO_DEPS_VERSION as golang-arm64v8
ENV GOARCH=arm64

## compile proxy-identity agent
FROM golang-$ARCH as golang
WORKDIR /linkerd-build
COPY pkg/flags pkg/flags
COPY pkg/tls pkg/tls
COPY pkg/version pkg/version
RUN CGO_ENABLED=0 GOOS=linux go build -mod=readonly ./pkg/...
COPY proxy-identity proxy-identity
RUN CGO_ENABLED=0 GOOS=linux go build -o /out/proxy-identity -mod=readonly -ldflags "-s -w" ./proxy-identity

FROM rust:$RUST_IMAGE_VERSION as rust-amd64
ENV DEB_ARCH=amd64
ENV CARGO_TARGET=x86_64-unknown-linux-gnu

FROM rust:$RUST_IMAGE_VERSION as rust-arm32v7
ENV DEB_ARCH=armhf
ARG COMPILER=arm-linux-gnueabihf
ENV CARGO_TARGET=armv7-unknown-linux-gnueabihf
ENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER=$COMPILER-gcc
ENV STRIP=$COMPILER-strip

FROM rust:$RUST_IMAGE_VERSION as rust-arm64v8
ENV DEB_ARCH=arm64
ARG COMPILER=aarch64-linux-gnu
ENV CARGO_TARGET=aarch64-unknown-linux-gnu
ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=$COMPILER-gcc
ENV STRIP=$COMPILER-strip

FROM rust-$ARCH as rust
ARG DEBIAN_FRONTEND=noninteractive
ARG SOURCE_PATH=/source/linkerd2-proxy
ENV CARGO_RELEASE=1

RUN apt-get update && apt-get install -yf --no-install-recommends \
        crossbuild-essential-$DEB_ARCH \
        curl \
        git \
 && apt-get clean

WORKDIR $SOURCE_PATH
COPY .proxy-version ../
RUN git clone --branch release/$(cat ../.proxy-version) https://github.com/linkerd/linkerd2-proxy.git .

RUN rustup target add $CARGO_TARGET
RUN make -j package
WORKDIR /out
RUN mv $SOURCE_PATH/target/$CARGO_TARGET/release/package/linkerd2-proxy-*/* . \
 && mv $SOURCE_PATH/../.proxy-version linkerd2-proxy-version.txt

FROM $RUNTIME_IMAGE as runtime
WORKDIR /usr/lib/linkerd/
COPY --from=rust /out/LICENSE /out/linkerd2-proxy-version.txt /out/bin/linkerd2-proxy ./
COPY --from=golang /out/proxy-identity linkerd2-proxy-identity
COPY proxy-identity/run-proxy.sh /usr/bin/linkerd2-proxy-run
ARG LINKERD_VERSION
ENV LINKERD_CONTAINER_VERSION_OVERRIDE=${LINKERD_VERSION}
ENV LINKERD2_PROXY_LOG=warn,linkerd=info
ENTRYPOINT ["/usr/bin/linkerd2-proxy-run"]
